import {
  ApiKeyRoute,
  IRoute,
  IsSubnameAvailableRoute,
  OffchainResolversRoute,
  RequestChallengeRoute,
  VerifyMessageRoute,
  SubnameAcceptRoute,
  SubnameAddRoute,
  SubnameGetAllByAddressRoute,
  SubnameGetAllByDomainChainIdRoute,
  SubnameGetAllCommunitiesChainIdRoute,
  SubnameGetByDomainNameChainIdRoute,
  SubnameGetBySubnameRoute,
  SubnameRecordsRoute,
  SubnameRejectRoute,
  SubnameReserveRoute,
  SubnameRevokeRoute,
  SubnameSearchRoute,
  SubnameUpdateRoute,
  RequestAddMAppPermissionChallengeRoute,
  RequestAppendMAppFieldChallengeRoute,
  RequestRevokeMAppFieldChallengeRoute,
  AddMAppPermissionRoute,
  AppendMAppFieldRoute,
  RevokeMAppPermissionRoute
} from '../../types';
import { HEALTH_CHECK_ROUTE } from './api-key';
import { OFFCHAIN_RESOLVERS_ROUTE } from './offchain-resolver';
import {
  SIWE_REQUEST_CHALLENGE_ROUTE,
  SIWE_VERIFY_MESSAGE_ROUTE,
  SIWE_MAPP_ADD_PERMISSION_ROUTE,
  SIWE_MAPP_APPEND_FIELD_ROUTE,
  SIWE_MAPP_REVOKE_PERMISSION_ROUTE
} from './siwe';
import {
  MAPP_ADD_PERMISSION_ROUTE,
  MAPP_APPEND_FIELD_ROUTE,
  MAPP_REVOKE_PERMISSION_ROUTE
} from './mapp'
import {
  ACCEPT_SUBNAME_ROUTE,
  ADD_SUBNAME_ROUTE,
  CHECK_SUBNAME_AVAILABILITY_ROUTE,
  GET_ALL_COMMUNITIES_WITH_COUNT_ROUTE,
  GET_ALL_SUBNAMES_BY_ADDRESS_ROUTE,
  GET_ALL_SUBNAMES_BY_DOMAIN_ROUTE,
  GET_ALL_SUBNAMES_BY_INVITATION_ROUTE,
  GET_SUBNAME_BY_DOMAIN_NAME_CHAIN_ID_ROUTE,
  GET_SUBNAME_BY_SUBNAME_ROUTE,
  RECORDS_BY_FULLNAME_ROUTE,
  REJECT_SUBNAME_ROUTE,
  RESERVE_SUBNAME_ROUTE,
  REVOKE_SUBNAME_ROUTE,
  SEARCH_SUBNAMES_ROUTE,
  UPDATE_SUBNAME_ROUTE,
} from './subnames';

export const Routes = {
  HEALTH_CHECK_ROUTE,
  SIWE_VERIFY_MESSAGE_ROUTE,
  SIWE_REQUEST_CHALLENGE_ROUTE,
  SIWE_MAPP_ADD_PERMISSION_ROUTE,
  SIWE_MAPP_APPEND_FIELD_ROUTE,
  SIWE_MAPP_REVOKE_PERMISSION_ROUTE,
  MAPP_ADD_PERMISSION_ROUTE,
  MAPP_APPEND_FIELD_ROUTE,
  MAPP_REVOKE_PERMISSION_ROUTE,
  ACCEPT_SUBNAME_ROUTE,
  RESERVE_SUBNAME_ROUTE,
  ADD_SUBNAME_ROUTE,
  REJECT_SUBNAME_ROUTE,
  OFFCHAIN_RESOLVERS_ROUTE,
  UPDATE_SUBNAME_ROUTE,
  REVOKE_SUBNAME_ROUTE,
  GET_SUBNAME_BY_DOMAIN_NAME_CHAIN_ID_ROUTE,
  GET_SUBNAME_BY_SUBNAME_ROUTE,
  GET_ALL_SUBNAMES_BY_DOMAIN_ROUTE,
  GET_ALL_SUBNAMES_BY_ADDRESS_ROUTE,
  GET_ALL_SUBNAMES_BY_INVITATION_ROUTE,
  CHECK_SUBNAME_AVAILABILITY_ROUTE,
  SEARCH_SUBNAMES_ROUTE,
  RECORDS_BY_FULLNAME_ROUTE,
  GET_ALL_COMMUNITIES_WITH_COUNT_ROUTE,
} as const;

export type RoutesType = keyof typeof Routes;

export type IROUTES = {
  [key in RoutesType]: IRoute;
};

export interface ROUTES extends IROUTES {
  HEALTH_CHECK_ROUTE: ApiKeyRoute;
  SIWE_VERIFY_MESSAGE_ROUTE: VerifyMessageRoute;
  SIWE_REQUEST_CHALLENGE_ROUTE: RequestChallengeRoute;
  SIWE_MAPP_ADD_PERMISSION_ROUTE: RequestAddMAppPermissionChallengeRoute;
  SIWE_MAPP_APPEND_FIELD_ROUTE: RequestAppendMAppFieldChallengeRoute;
  SIWE_MAPP_REVOKE_PERMISSION_ROUTE: RequestRevokeMAppFieldChallengeRoute;
  MAPP_ADD_PERMISSION_ROUTE: AddMAppPermissionRoute;
  MAPP_APPEND_FIELD_ROUTE: AppendMAppFieldRoute;
  MAPP_REVOKE_PERMISSION_ROUTE: RevokeMAppPermissionRoute;
  ACCEPT_SUBNAME_ROUTE: SubnameAcceptRoute;
  RESERVE_SUBNAME_ROUTE: SubnameReserveRoute;
  ADD_SUBNAME_ROUTE: SubnameAddRoute;
  UPDATE_SUBNAME_ROUTE: SubnameUpdateRoute;
  REJECT_SUBNAME_ROUTE: SubnameRejectRoute;
  OFFCHAIN_RESOLVERS_ROUTE: OffchainResolversRoute;
  REVOKE_SUBNAME_ROUTE: SubnameRevokeRoute;
  GET_SUBNAME_BY_DOMAIN_NAME_CHAIN_ID_ROUTE: SubnameGetByDomainNameChainIdRoute;
  GET_SUBNAME_BY_SUBNAME_ROUTE: SubnameGetBySubnameRoute;
  GET_ALL_SUBNAMES_BY_DOMAIN_ROUTE: SubnameGetAllByDomainChainIdRoute;
  GET_ALL_SUBNAMES_BY_ADDRESS_ROUTE: SubnameGetAllByAddressRoute;
  GET_ALL_SUBNAMES_BY_INVITATION_ROUTE: SubnameGetAllByAddressRoute;
  CHECK_SUBNAME_AVAILABILITY_ROUTE: IsSubnameAvailableRoute;
  SEARCH_SUBNAMES_ROUTE: SubnameSearchRoute;
  RECORDS_BY_FULLNAME_ROUTE: SubnameRecordsRoute;
  GET_ALL_COMMUNITIES_WITH_COUNT_ROUTE: SubnameGetAllCommunitiesChainIdRoute;
}
